{{#if compact}}
    {{> slicey}}
{{else}}
    {{> bigger-banner}}
{{/if}}

<div id="cryptograss-content" class="container mt-3">
    <h1 class="text-light pixel-font text-center mb-3">Magic hat</h1>
    <hr/>
    <p class="h3 text-light curly text-center"></p>

    <div class="row">
        <div class="col-2"></div>
        <div id="faq" class="col-sm-8 cryptograss-nav" style="display: none;">
            This is my id
        </div>
        <div class="col-2"></div>
    </div>

    <input id="secretRabbit" type="text" class="form-control" placeholder="Enter your secret rabbit", style="display: none;"
    <p id="verifyResult" class="text-light" style="display: none;"></p>
    <p id="invalidRabbitErrorMessage" class="text-light" style="display: none; color: red;">Invalid secret rabbit</p>
    <div id="donationModalContainer" style="display: flex; justify-content: center; width: 100%;">
        <div id="donationModal" style="display: flex; flex-direction: column; align-items: center; width: 75%;">
            <span class="curly"><h2>Contribute</h2></span>
            <!-- Countdown Timer -->
            <div id="countdown" class="text-light pixel-font text-center mb-3" style="font-size: 3em;"></div>

            <h2 id="rabbithash"></h2>
            <h4>Save this hash.</h4>

            <img src="{{resolveImage 'rabbits.jpg'}}" style="width:500px; height:auto;">

            <p>We'll mint a 721 of our poster art for the Brussels Regens shows (Regen Village and Regenaissance) when the clock strikes the big zero.</p>
            <p>Purchase will only be available to folks who attended the show and got a "rabbit" QR code.</p>

            {{!-- 
            <div style="display: flex; justify-content: space-between; width: 100%; padding: 10px;">
                    <button onclick="setDonationAmount(0.05)" class="btn btn-primary">0.05 ETH</button>
                    <button onclick="setDonationAmount(0.1)" class="btn btn-primary">0.1 ETH</button>
                    <button onclick="setDonationAmount(0.3)" class="btn btn-primary">0.3 ETH</button>
            </div>
            <div class="input-group" style="width: 100%; padding: 10px;">
                <input id="amount" type="number" class="form-control" placeholder="Enter the amount">
                <span class="input-group-addon">ETH</span>
            </div>
            <button id="verify" class="btn btn-primary" onclick="verifyRabbit()">Verify</button> --}}

            {{!-- 
            <div style="display: flex; justify-content: space-between; width: 100%; padding: 10px;">
                <button id="makePayment" class="btn btn-primary" style="padding: 10px;" onclick="makePayment()">Make Payment</button>
                <w3m-button></w3m-button>
            </div>
            --}}


        </div>
    </div>
    {{!-- <style>
    #amount {
        padding: 10px;
        width: 100%;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 16px;
        text-align: left;
    }
    .input-group-addon {
        position: absolute;
        right: 10px;
        font-size: 16px;
        color: #666;
    }
    </style> --}}


    {{!-- {{#each rabbit_hashes}}
        <div class="col-2">
            {{this}}
        </div>
    {{/each}} --}}


</div>

<script>

// take the valid hashes out from the rabbit_hashes array
// and put them into a new array
const valid_rabbit_hashes = [
{{#each rabbit_hashes}}
    "{{this}}",
{{/each}}
]

// Countdown Timer Script
const countdownElement = document.getElementById('countdown');
const targetDate = new Date('July 12, 2024 22:00:00').getTime();

function updateCountdown() {
    const now = new Date().getTime();
    const distance = targetDate - now;

    if (distance < 0) {
        countdownElement.innerHTML = "EXPIRED";
        return;
    }

    const days = Math.floor(distance / (1000 * 60 * 60 * 24));
    const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
    const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
    const seconds = Math.floor((distance % (1000 * 60)) / 1000);

    countdownElement.innerHTML = `${days}d ${hours}h ${minutes}m ${seconds}s`;
    console.log(`${days}d ${hours}h ${minutes}m ${seconds}s`);
}

setInterval(updateCountdown, 1000);

</script>